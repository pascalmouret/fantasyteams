package fantasyteams;

import java.awt.Color;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GUI.java
 *
 * Created on 07.04.2010, 14:46:29
 */

/**
 *
 * @author 5im08luneukom
 */
public class GUI extends javax.swing.JFrame implements GameListener {

    private Game game;
    private InputHandler inputHandler = new InputHandler();
    private JFileChooser map_chooser = new JFileChooser();
    /** Creates new form GUI */
    public GUI() {
        initComponents();
    }

    public GUI(Game game) {
        initComponents();
        this.game = game;

        map_chooser.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        FileFilter filter = new FileFilter() {
            public boolean accept(File dir) {
                if((dir.isDirectory() && !dir.getName().startsWith(".")) || dir.getName().endsWith(".map")) {
                    return true;
                } else {
                    return false;
                }
            }

            @Override
            public String getDescription() {
                return ".map (Map-Files)";
            }
        };
        File path = new File("./maps");
        map_chooser.setCurrentDirectory(path);
        map_chooser.setFileFilter(filter);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        unit_details = new javax.swing.JLabel();
        unit_details_panel = new javax.swing.JPanel();
        unit_name = new javax.swing.JLabel();
        unit_attack = new javax.swing.JLabel();
        unit_defense = new javax.swing.JLabel();
        attack_output = new javax.swing.JLabel();
        def_output = new javax.swing.JLabel();
        name_output = new javax.swing.JLabel();
        unit_health = new javax.swing.JLabel();
        health_output = new javax.swing.JLabel();
        movement_output = new javax.swing.JLabel();
        unit_movement = new javax.swing.JLabel();
        endround_btn = new javax.swing.JButton();
        newgame_btn = new javax.swing.JButton();
        endgame_btn = new javax.swing.JButton();
        field_details_panel = new javax.swing.JPanel();
        field_name = new javax.swing.JLabel();
        field_bonus = new javax.swing.JLabel();
        name_output_field = new javax.swing.JLabel();
        bonus_output = new javax.swing.JLabel();
        field_details = new javax.swing.JLabel();
        playField1 = new fantasyteams.playField(inputHandler);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Fantasy Teams");
        setBackground(new java.awt.Color(180, 180, 180));
        setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        setResizable(false);

        unit_details.setFont(getFont());
        unit_details.setText("Einheiten-Details");

        unit_details_panel.setBackground(new java.awt.Color(212, 212, 212));

        unit_name.setFont(getFont());
        unit_name.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        unit_name.setText("Name");

        unit_attack.setFont(getFont());
        unit_attack.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        unit_attack.setText("Angriff");

        unit_defense.setFont(getFont());
        unit_defense.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        unit_defense.setText("Verteidigung");

        attack_output.setFont(getFont());

        def_output.setFont(getFont());

        name_output.setFont(getFont());

        unit_health.setFont(getFont());
        unit_health.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        unit_health.setText("Gesundheit");

        health_output.setFont(getFont());

        movement_output.setFont(getFont());

        unit_movement.setFont(getFont());
        unit_movement.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        unit_movement.setText("Bewegung");

        javax.swing.GroupLayout unit_details_panelLayout = new javax.swing.GroupLayout(unit_details_panel);
        unit_details_panel.setLayout(unit_details_panelLayout);
        unit_details_panelLayout.setHorizontalGroup(
            unit_details_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(unit_details_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(unit_details_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(unit_details_panelLayout.createSequentialGroup()
                        .addComponent(unit_movement, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(attack_output, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(unit_details_panelLayout.createSequentialGroup()
                        .addComponent(unit_attack, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(movement_output, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(unit_details_panelLayout.createSequentialGroup()
                        .addComponent(unit_defense, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(def_output, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(unit_details_panelLayout.createSequentialGroup()
                        .addComponent(unit_health, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(health_output, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(unit_details_panelLayout.createSequentialGroup()
                        .addComponent(unit_name, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(name_output, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        unit_details_panelLayout.setVerticalGroup(
            unit_details_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(unit_details_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(unit_details_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(unit_name, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name_output, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(unit_details_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(unit_movement, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(attack_output, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(unit_details_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(movement_output, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unit_attack, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(unit_details_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(unit_defense, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(def_output, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(unit_details_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(unit_health, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(health_output, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(211, 211, 211))
        );

        endround_btn.setFont(getFont());
        endround_btn.setText("Spieler 1 - Zug beenden");
        endround_btn.setToolTipText("");
        endround_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endround_btnActionPerformed(evt);
            }
        });

        newgame_btn.setFont(getFont());
        newgame_btn.setText("Neues Spiel");
        newgame_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newgame_btnActionPerformed(evt);
            }
        });

        endgame_btn.setFont(getFont());
        endgame_btn.setText("Spiel beenden");
        endgame_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endgame_btnActionPerformed(evt);
            }
        });

        field_details_panel.setBackground(new java.awt.Color(212, 212, 212));

        field_name.setFont(getFont());
        field_name.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        field_name.setText("Name");

        field_bonus.setFont(getFont());
        field_bonus.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        field_bonus.setText("Bonus");

        name_output_field.setFont(getFont());

        bonus_output.setFont(getFont());

        javax.swing.GroupLayout field_details_panelLayout = new javax.swing.GroupLayout(field_details_panel);
        field_details_panel.setLayout(field_details_panelLayout);
        field_details_panelLayout.setHorizontalGroup(
            field_details_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(field_details_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(field_details_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(field_bonus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(field_name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                .addGroup(field_details_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(field_details_panelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(name_output_field, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, field_details_panelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bonus_output, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(158, 158, 158))))
        );
        field_details_panelLayout.setVerticalGroup(
            field_details_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(field_details_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(field_details_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(field_name, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name_output_field, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(field_details_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bonus_output, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(field_bonus, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(130, Short.MAX_VALUE))
        );

        field_details.setFont(getFont());
        field_details.setText("Geländedetails");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(unit_details_panel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unit_details, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(field_details, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(endgame_btn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newgame_btn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endround_btn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(field_details_panel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(unit_details)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(unit_details_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(field_details)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(field_details_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(31, 31, 31)
                .addComponent(endround_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(newgame_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(endgame_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        playField1.setPreferredSize(new java.awt.Dimension(800, 800));
        playField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playField1MouseClicked(evt);
            }
        });
        playField1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                playField1MouseOver(evt);
            }
        });

        javax.swing.GroupLayout playField1Layout = new javax.swing.GroupLayout(playField1);
        playField1.setLayout(playField1Layout);
        playField1Layout.setHorizontalGroup(
            playField1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        playField1Layout.setVerticalGroup(
            playField1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(playField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(playField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void endgame_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endgame_btnActionPerformed
        System.exit(0);
    }//GEN-LAST:event_endgame_btnActionPerformed

    private void newgame_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newgame_btnActionPerformed
        // Show the dialog; wait until dialog is closed
        int result = map_chooser.showOpenDialog(this);

        // Determine which button was clicked to close the dialog
        switch (result) {
            case JFileChooser.APPROVE_OPTION: // Approve (Open or Save) was clicked
                try {
                    game.makeReady(map_chooser.getSelectedFile().getName());
                    this.repaint();
                } catch (CloneNotSupportedException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            case JFileChooser.CANCEL_OPTION: // Cancel or the close-dialog icon was clicked
                break;
            case JFileChooser.ERROR_OPTION: // The selection process did not complete successfully
                break;
        }
        if(inputHandler.getFirst() != null) {
            inputHandler.reset();
            this.repaint();
        }
    }//GEN-LAST:event_newgame_btnActionPerformed

    private void changeInfos() {
        if(inputHandler.getFirst() != null) {
            if(inputHandler.getFirst().getUnit() != null) {
                name_output.setText(inputHandler.getFirst().getUnit().getType() + ", Spieler " + inputHandler.getFirst().getUnit().getPlayer());
                health_output.setText(String.valueOf(inputHandler.getFirst().getUnit().getHealth()));
                movement_output.setText(String.valueOf(inputHandler.getFirst().getUnit().getMovement()));
                attack_output.setText(String.valueOf(inputHandler.getFirst().getUnit().getAttack()));
                def_output.setText(String.valueOf(inputHandler.getFirst().getUnit().getDefense()));
            }
            name_output_field.setText(inputHandler.getFirst().getType());
            bonus_output.setText("+" + String.valueOf(inputHandler.getFirst().getDefense()) + " Verteidigung");
        }
    }

    private void emptyInfos() {
            name_output.setText("");
            health_output.setText("");
            movement_output.setText("");
            attack_output.setText("");
            def_output.setText("");
            name_output_field.setText("");
            bonus_output.setText("");
    }

    private void endround_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endround_btnActionPerformed
        if(game.getActivePlayer() != 0) {
            getGame().endRound();
            if(inputHandler.isNeedTarget()) {
                inputHandler.reset();
                this.repaint();
            }
            if(getGame().getActivePlayer() == 1) {
                endround_btn.setText("Spieler 1 - Runde Beenden");
            } else {
                endround_btn.setText("Spieler 2 - Runde Beenden");
            }
        }
    }//GEN-LAST:event_endround_btnActionPerformed

    private void playField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playField1MouseClicked
        if(game.getActivePlayer() != 0) {
            try {
                inputHandler.calculateField(evt);
            } catch (Exception ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            changeInfos();
            if(inputHandler.getAction() == 0) {
                emptyInfos();
            } else if(inputHandler.getSecond() != null) {
                movement_output.setText(String.valueOf(inputHandler.getSecond().getUnit().getMovement()));
                name_output_field.setText(inputHandler.getSecond().getType());
                bonus_output.setText("+" + String.valueOf(inputHandler.getSecond().getDefense()) + " Verteidigung");
                inputHandler.reset();
                if(game.isDefeated() == 1) {
                    playField1.setWin(1);
                } else if(game.isDefeated() == 2) {
                    playField1.setWin(2);
                }
            }
            this.repaint();
        }
    }//GEN-LAST:event_playField1MouseClicked

    private void playField1MouseOver(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playField1MouseOver
        if(game.getActivePlayer() != 0) {
            try {
                inputHandler.calculateField(evt);
            } catch (Exception ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            emptyInfos();
            changeInfos();
        }
    }//GEN-LAST:event_playField1MouseOver


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel attack_output;
    private javax.swing.JLabel bonus_output;
    private javax.swing.JLabel def_output;
    private javax.swing.JButton endgame_btn;
    private javax.swing.JButton endround_btn;
    private javax.swing.JLabel field_bonus;
    private javax.swing.JLabel field_details;
    private javax.swing.JPanel field_details_panel;
    private javax.swing.JLabel field_name;
    private javax.swing.JLabel health_output;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel movement_output;
    private javax.swing.JLabel name_output;
    private javax.swing.JLabel name_output_field;
    private javax.swing.JButton newgame_btn;
    private fantasyteams.playField playField1;
    private javax.swing.JLabel unit_attack;
    private javax.swing.JLabel unit_defense;
    private javax.swing.JLabel unit_details;
    private javax.swing.JPanel unit_details_panel;
    private javax.swing.JLabel unit_health;
    private javax.swing.JLabel unit_movement;
    private javax.swing.JLabel unit_name;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the game
     */
    public Game getGame() {
        return game;
    }

}
